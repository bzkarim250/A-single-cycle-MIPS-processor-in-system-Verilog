// InstructionMemory_TB.sv

module InstructionMemory_TB;

    // Parameters for the module instantiation
    parameter DATA_WIDTH = 32;
    parameter ADDR_WIDTH = 8;

    // Signals for connecting to the InstructionMemory module
    logic clk, rst;
    logic [ADDR_WIDTH-1:0] address;
    logic [DATA_WIDTH-1:0] instruction;

    // Instantiate the InstructionMemory module
    InstructionMemory #(DATA_WIDTH, ADDR_WIDTH) im (
        .clk(clk),
        .rst(rst),
        .address(address),
        .instruction(instruction)
    );

    // Clock generation
    initial begin
        clk = 0;
        forever #5 clk = ~clk;
    end

    // Stimulus generation and monitoring
    initial begin
        // Initialize signals
        rst = 1;
        address = 0;

        // Apply reset for a few clock cycles
        #10 rst = 0;

        // Test scenario: Read instructions from different addresses
        #10 address = 0; // Read instruction from address 0
        #10 address = 1; // Read instruction from address 1
        // Add more test scenarios as needed

        // End simulation after some time
        #100 $finish;
    end

endmodule

